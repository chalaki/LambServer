<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>Lambda Docker</title>
    <link rel="stylesheet" type="text/css" href="/css/style.css">
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:300' rel='stylesheet' type='text/css'>
</head>



<body>
    <div class="container">
        <fieldset>
            <form action="/" method="post">
                <!-- <div id="editor">function foo(items) {
                    var x = "All this is syntax highlighted";
                    return x;
                    }</div>

                <script src="/Scripts/ace.js" type="text/javascript" charset="utf-8"></script>
                <script>
                    var editor = ace.edit("editor");
                    editor.setTheme("ace/theme/monokai");
                    editor.session.setMode("ace/mode/javascript");
                </script> -->

                <textarea name="code" type="text" cols="100" rows="20" class="ghost-input" placeholder="Enter Code"
                    required><% if(worker_code !== null){ %>
                        <%= worker_code %>  
                        <% } else { %>
                            exports.handler = async (event) => {
    var verbose = true;
    if (verbose) console.log("############### Inside Lambda handler - received event: ");
    if (verbose) console.log(event);
    var startTime = new Date().getTime();
    var responseJson = {};
    var needsArray = [];
    var responseCode = "200";
    try {
        responseJson.statusCode = "400"; // assume error..overwrite later
        if (event.queryStringParameters != null) if (event.queryStringParameters.need != null) needsArray = event.queryStringParameters.need.split('-');
        var responseBody = {};
        var stopTime = new Date().getTime();
        var elapsedTime = (stopTime - startTime) / 1000.0;
        responseBody.elapsed = elapsedTime;
        [1,2,3,4,5,6,7,8,9,10].forEach (i=> {responseBody[i] = i*i*i;});
        console.log('elapsed: ' + elapsedTime);
        responseJson.isBase64Encoded = false;
        responseJson.statusCode = responseCode;
        responseJson.headers = { "x-custom-header": "my custom header value" };
        responseJson.body = JSON.stringify(responseBody);
    }
    catch (ex) { console.log(ex.toString()); }
    console.log('status code: ' + responseJson.statusCode);
    return responseJson;
};
 <% } %>

</textarea>
                <textarea name="event" type="text" cols="100" rows="20" class="ghost-input" placeholder="Enter event"
                    required>{ "queryStringParameters": { "need": "getsurveys", "surveyId": 814412, "supplierId": 1, "supplierName": "Mallesh", "surveyName": "Sattva", "sdate": "2018-11-04", "edate": "2018-11-08" } }    
                </textarea>
                <input type="submit" class="ghost-button" value="Lamda">
            </form>

            <textarea cols="100" rows="20"><% if(worker_output !== null){ %>
                <%= worker_output %>  <% } %>
            </textarea>
            <textarea cols="100" rows="20"><% if(worker_log !== null){ %>
                <%= worker_log %> <% } %>
            </textarea>

            <% if(error !== null){ %>
            <p>
                <%= error %>
            </p>
            <% } %>
        </fieldset>
    </div>
</body>

</html>